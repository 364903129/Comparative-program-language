head	1.2;
access;
symbols;
locks;
comment	@# @;


1.2
date	2019.01.02.22.50.40;	author -;	state -;
branches;
next	1.1;

1.1
date	2009.02.04.01.37.29;	author -;	state -;
branches;
next	;


desc
@@


1.2
log
@-
@
text
@# $Id: 41-eratosthenes.sb,v 1.1 2009-02-03 17:37:29-08 - - $
#
	let n = 100
	dim sieve[n]

# Assume all numbers in the sieve are prime

	let i = 2
init:	let sieve[i] = 1
	let i = i + 1
	if i < n goto init

# Find primes and punch out their multiples.

	let prime = 2
primes:	if sieve[prime] = 0 goto next
	print prime
	let i = prime * 2
	goto punch
loop:	let sieve[i] = 0
	let i = i + prime
punch:	if i <= n goto loop

next:	let prime = prime + 1
	if prime <= n goto primes
@


1.1
log
@-
@
text
@d1 1
a1 1
# $Id: 41-eratosthenes.sb,v 1.1 2008-02-05 15:34:45-08 - - $
d4 1
a4 1
	dim sieve(n)
d9 1
a9 1
init:	let sieve(i) = 1
d16 1
a16 1
primes:	if sieve(prime) = 0 goto next
d20 1
a20 1
loop:	let sieve(i) = 0
@
