head	1.2;
access;
symbols;
locks;
comment	@# @;


1.2
date	2019.01.08.22.51.13;	author -;	state -;
branches;
next	1.1;

1.1
date	2009.02.04.01.37.29;	author -;	state -;
branches;
next	;


desc
@@


1.2
log
@-
@
text
@# $Id: 32-factorial.sb,v 1.1 2009-02-03 17:37:29-08 - - $
#
# Factorial.
#
read:	print "Factorial of:"
	input x
	# check the variable eof for a valid value or not.
	if eof = 1 goto stop
	if x <> x goto error
	if x < 0 goto error
	goto letfac
error:	print "Invalid input."
	goto read

#
#
#

letfac:	let factorial = 1
	let itor = 2
loop:	if itor > x goto prt
	let factorial = factorial * itor
	let itor = itor + 1
	goto loop
prt:	print "factorial(", x, ") = ", factorial
	goto read

#
# end of file.
#

stop:	print "Program stopping."
@


1.1
log
@-
@
text
@d1 1
a1 1
# $Id: 32-factorial.sb,v 1.1 2008-02-05 15:34:44-08 - - $
d8 2
a9 2
	if inputcount = -1 goto stop
	if inputcount = 0 goto error
@
